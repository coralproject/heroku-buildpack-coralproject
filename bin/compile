#!/usr/bin/env bash

# Copyright 2016 Mozilla Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.

# bin/compile <build-dir> <cache-dir>

BUILD=$1
CACHE=$2
SCRIPTS=$BUILD/.profile.d
CORAL_SCRIPT=$SCRIPTS/coral.sh
mkdir -p $SCRIPTS

# Install Go
wget https://storage.googleapis.com/golang/go1.7.1.linux-amd64.tar.gz
tar xvfz go*
rm go*.tar.gz
echo 'PATH=$PATH:$HOME/go/bin' > $CORAL_SCRIPT
echo 'export GOROOT=$HOME/go' > $CORAL_SCRIPT
echo 'export GOPATH=$HOME' > $CORAL_SCRIPT
export PATH=$PATH:$BUILD/go/bin
export GOROOT=$BUILD/go
export GOPATH=$BUILD

# Install Node
wget https://nodejs.org/dist/v6.7.0/node-v6.7.0-linux-x64.tar.xz
tar xvf node*
rm node*.tar.xz
mv node* node
echo 'PATH=$PATH:$HOME/node/bin' > $CORAL_SCRIPT

# Download askd via Shelf
go get github.com/coralproject/shelf

# Download Elkhorn
git clone https://github.com/coralproject/elkhorn.git
cd elkhorn
cp config.sample.json config.json
sed -i 's/  "askHost": "https:\/\/my-ask-service.com",/  "askHost": "http:\/\/localhost:16181",/g' config.json
cd $BUILD

# Download Cay
git clone https://github.com/coralproject/cay.git
cd cay
cat << EOF >> public/config.json
{
  "xeniaHost": "http://localhost:16181",
  "askHost": "http://localhost:16181",
  "trustHost": "",
  "elkhornHost": "http://localhost:4444.",
  "elkhornStaticHost": "",
  "environment": "development",
  "brand": "Coral Project",
  "googleAnalyticsId": "UA-12345678-9",
  "requireLogin": false,
  "basicAuthorization": "",
  "features": {
    "trust": false,
    "ask": true
  },
  "recaptcha": false
}
EOF
cd $BUILD
mv $BUILD/cay/src/app/layout/Sidebar/* $BUILD/cay/src/app/layout/sidebar

# Create a start script for coral
mkdir -p $BUILD/bin
cat << EOF >> $BUILD/bin/coral
#!/usr/bin/env bash

# Start askd via Shelf
cd \$GOPATH/src/github.com/coralproject/shelf/cmd/askd
go build
export XENIA_MONGO_HOST=`echo \$MONGODB_URI | cut -d '@' -f 2 | cut -d '/' -f 1`
export XENIA_MONGO_USER=`echo \$MONGODB_URI | cut -d ':' -f 2 | cut -d '/' -f 3`
export XENIA_MONGO_AUTHDB=`echo \$MONGODB_URI | cut -d '/' -f 4`
export XENIA_MONGO_DB=`echo \$MONGODB_URI | cut -d '/' -f 4`
export XENIA_MONGO_PASS=`echo \$MONGODB_URI | cut -d ':' -f 3 | cut -d '@' -f 1`
export XENIA_AUTH_PUBLIC_KEY=
export XENIA_LOGGING_LEVEL=1
export XENIA_HOST=:16181
cd \$HOME
\$GOPATH/src/github.com/coralproject/shelf/cmd/askd/askd &

# Start Elkhorn
cd \$HOME/elkhorn
npm install
npm start &
cd \$HOME

# Start Cay
cd cay
sed -i "s/server.listen(3000, 'localhost', function(err) {/server.listen(\$PORT, 'localhost', function(err) {/g" dev-server.js
npm install
npm start &
cd \$HOME
EOF
chmod +x $BUILD/bin/coral
echo 'PATH=$PATH:$BUILD/bin' > $CORAL_SCRIPT

# Make sure the PATH is set correctly
echo 'export PATH=$PATH' > $CORAL_SCRIPT

exit 0
