#!/usr/bin/env bash

# Copyright 2016 Mozilla Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software #
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.

error() {
  echo " !     $*" >&2
  exit 1
}

status() {
  echo "-----> $*"
}

statusn() {
  echo -n "-----> $*"
}

install_docker() {
    cache_dir=$1
    build_dir=$2
    url="https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz"
    home=".docker"

    if [ ! -d "${cache_dir}" ]; then
        error "Invalid cache directory to store Docker.";
    fi
    if [ ! -d "${build_dir}" ]; then
        error "Invalid slug directory to install Docker.";
    fi

    mkdir -p "$build_dir/$home"

    # Check to see if Docker has already been installed in the cache
    if [ ! -d "${cache_dir}/$home" ]; then
        echo "Downloading Docker..."
        rm -rf "$cache_dir/$home" && mkdir -p "$cache_dir/$home"
        curl -s $url | tar xvz -C "$cache_dir/$home" --strip-components=1
    fi

    # Make the docker executable accessible to the project
    cp -r "$cache_dir/$home/." "$build_dir/$home"
    export PATH="$build_dir/$home:$PATH"
}

install_mongo() {
    cache_dir=$1
    build_dir=$2
    url="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-amazon-3.2.8.tgz"
    home=".mongo"

    if [ ! -d "${cache_dir}" ]; then
        error "Invalid cache directory to store MongoDB.";
    fi
    if [ ! -d "${build_dir}" ]; then
        error "Invalid slug directory to install MongoDB.";
    fi

    # Check to see if Mongo has already been installed in the cache
    if [ ! -d "${cache_dir}/$home" ]; then
        echo "Downloading Mongo..."
        rm -rf "$cache_dir/$home" && mkdir -p "$cache_dir/$home"
        curl -s $url | tar xvz -C "$cache_dir/$home" --strip-components=1
    fi

    # Make the docker executable accessible to the project
    cp -r "$cache_dir/$home/." "$build_dir/$home"
    export PATH="$build_dir/$home:$PATH"
}
